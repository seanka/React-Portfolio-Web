name: Deploy

on:
  push:
    branches:
      - master
      
permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Install dependencies
        uses: bahmutov/npm-install@v1

      - name: Create Config
        run: |
          echo "export const FirebaseConfig = {" > src/Data/Remotes/Base/FirebaseConfig.ts
          echo "  apiKey: '${{ secrets.FIREBASE_API_KEY }}'," >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "  authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'," >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "  databaseURL: '${{ secrets.FIREBASE_DATABASE_URL }}'," >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "  projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'," >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "  storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'," >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "  messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'," >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "  appId: '${{ secrets.FIREBASE_APP_ID }}'" >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "};" >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "" >> src/Data/Remotes/Base/FirebaseConfig.ts
          echo "export const AppCheckKey = '${{ secrets.FIREBASE_APP_CHECK_KEY }}';" >> src/Data/Remotes/Base/FirebaseConfig.ts

      - name: Build project
        run: npm run build

      - name: List build output
        run: ls -l ./dist  # Debugging step

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./dist

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./dist

      - name: List downloaded files
        run: ls -l ./dist  # Debugging step to verify files exist

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          force_orphan: true  # Ensures deployment works even if branch is empty